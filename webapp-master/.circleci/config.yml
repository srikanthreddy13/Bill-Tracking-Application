version: 2
jobs:
  pr_check:
    docker:
      - image: circleci/node:8.10.0
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: parasites
          MYSQL_DATABASE: csye6225

    steps:
      - checkout
      - run:
          name: Install aws cli in the container
          command: |
            pwd
            ls -la
            sudo apt-get update
            sudo apt-get install curl -y
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo apt-get install unzip -y
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
      - run:
          name: Set up env parameters for node app
          command: |
            cd ~/
            pwd
            touch .env
            echo 'DB_HOST="localhost"' >> .env
            echo 'DB_USER="root"' >> .env
            echo 'DB_PASSWORD="parasites"' >> .env
            echo 'DB_NAME="csye6225"' >> .env

      # Install node packages
      - run: npm install
      
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: Install mysql-client and create the users table
          command: |
            sudo apt-get update && sudo apt-get upgrade && sudo apt-get install mysql-client
 
      - run:
          # Run tests using Jest
          name: Tests run
          command: |
            npm test

  build:
    working_directory: ~/webapp
    docker:
      - image: circleci/node:8.10.0
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: parasites
          MYSQL_DATABASE: csye6225

    steps:
      - checkout
      - run:
          name: Install aws cli in the container
          command: |
            pwd
            ls -la
            sudo apt-get update
            sudo apt-get install curl -y
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo apt-get install unzip -y
            sudo apt-get install less -y
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
      - run:
          name: Set up env parameters for node app
          command: |
            cd ~/
            pwd
            touch .env
            echo 'DB_HOST="localhost"' >> .env
            echo 'DB_USER="root"' >> .env
            echo 'DB_PASSWORD="parasites"' >> .env
            echo 'DB_NAME="csye6225"' >> .env
            
      # Install node packages
      - run: npm install
      
      - run:
      # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      - run:
          name: Install mysql-client and create the users table
          command: |
            sudo apt-get update && sudo apt-get upgrade && sudo apt-get install mysql-client
 
      - run:
          # Run tests using Jest
          name: Tests run
          command: |
            npm test
            
      - run:
          name: Build and Zip Artifact
          command: |
            echo "Hello the current build number is ${CIRCLE_BUILD_NUM}"
            pwd
            ls -al
            rm -rf node_modules/
            rm -rf aws/
            rm -rf .circleci/
            rm README.md
            mkdir -p codedeploy_artifact
            cp appspec.yml ../
            cd ..
            zip -r csye6225-webapp-${CIRCLE_BUILD_NUM}.zip webapp/ *.yml
            mv csye6225-webapp-${CIRCLE_BUILD_NUM}.zip webapp/codedeploy_artifact/
            cd webapp/codedeploy_artifact/
            pwd
            ls -al

      - run:
          name: Upload Artifact to S3
          command: |
            pwd
            ls -al
            cd codedeploy_artifact
            aws configure list
            aws s3 cp csye6225-webapp-${CIRCLE_BUILD_NUM}.zip s3://${s3bucket}

      - run:
          name: Make CodeDeploy API call
          command: |
            echo "CodeDeploy creation" 
            aws configure list
            aws deploy create-deployment --application-name csye6225-webapp --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name csye6225-webapp-deployment --s3-location bucket=${s3bucket},key=csye6225-webapp-${CIRCLE_BUILD_NUM}.zip,bundleType=zip
            
      
workflows:
  version: 2
  pr-check-workflow:
    jobs:
      - pr_check
  build-deploy-workflow:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master